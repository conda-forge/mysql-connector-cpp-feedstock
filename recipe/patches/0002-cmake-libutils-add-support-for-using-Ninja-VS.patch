From 20664867ec2fab9c8c3c25e00a681155f0b646dc Mon Sep 17 00:00:00 2001
From: Nehal J Wani <nehaljw.kkd1@gmail.com>
Date: Fri, 24 Jul 2020 00:36:08 -0400
Subject: [PATCH 2/3] cmake/libutils: add support for using Ninja + VS

---
 cmake/libutils.cmake                    | 30 ++++++++--
 cmake/libutils/merge_archives.cmake.in  |  6 +-
 cmake/libutils/save_linker_opts.cc.orig | 76 +++++++++++++++++++++++++
 cmake/libutils/save_linker_opts.cc.rej  | 24 ++++++++
 4 files changed, 129 insertions(+), 7 deletions(-)
 create mode 100644 cmake/libutils/save_linker_opts.cc.orig
 create mode 100644 cmake/libutils/save_linker_opts.cc.rej

diff --git a/cmake/libutils.cmake b/cmake/libutils.cmake
index 05ea32e9..982a76fd 100644
--- a/cmake/libutils.cmake
+++ b/cmake/libutils.cmake
@@ -64,6 +64,17 @@ macro(libutils_setup)
   endif()
 
 
+  if(WIN32 AND CMAKE_MAKE_PROGRAM MATCHES "ninja")
+    if(${CMAKE_CXX_COMPILER} MATCHES "cl.exe")
+      set(NINJA_WITH_VS ON)
+      # At this point, probably safe to assume Visual Studio Compiler is being used
+      # Use lib.exe from the same location as other compiler tools
+      get_filename_component(path "${CMAKE_LINKER}" DIRECTORY)
+      set(LIB_TOOL "${path}/lib.exe")
+    endif()
+  endif()
+
+
   if(APPLE)
 
     find_program(LIB_TOOL libtool)
@@ -180,7 +191,7 @@ function(merge_libraries TARGET)
   # by merge_archives script is appended to that file.
   #
 
-  if(NOT MSVC OR NOT TYPE STREQUAL "SHARED")
+  if(NOT (MSVC OR NINJA_WITH_VS) OR NOT TYPE STREQUAL "SHARED")
 
     set(log_name "${TARGET}.log")
     set(log_file
@@ -197,11 +208,23 @@ function(merge_libraries TARGET)
       -DMSVC=${MSVC}
       -DINFO=${INFO}
       -DINFO_PREFIX=${INFO_PREFIX}
+      -DNINJA_WITH_VS=${NINJA_WITH_VS}
       -P ${LIBUTILS_BIN_DIR}/merge_archives.cmake
     )
 
   endif()
 
+  if(NINJA_WITH_VS AND TYPE STREQUAL "SHARED")
+      set(link_flags)
+      foreach(lib ${ARGN})
+        list(APPEND link_flags "/wholearchive:${lib}")
+      endforeach()
+      string(REPLACE ";" " " link_flags "${link_flags}")
+      set_property(TARGET ${TARGET} APPEND PROPERTY LINK_FLAGS ${link_flags})
+      return()
+  endif()
+
+
   #
   # The general way of detecting all dependencies is by building a helper
   # target ${TARGET}-deps which depends on the libraries that are to be merged.
@@ -213,8 +236,7 @@ function(merge_libraries TARGET)
   # differs for different build tools.
   #
 
-  if(NOT MSVC)
-
+  if(NOT MSVC OR NINJA_WITH_VS)
     # TODO: Will it work with XCode?
 
     add_library(${TARGET}-deps SHARED EXCLUDE_FROM_ALL "${LIBUTILS_SCRIPT_DIR}/empty.cc")
@@ -284,7 +306,7 @@ function(merge_libraries TARGET)
 
     endif()
 
-    if(NOT MSBUILD)
+    if(NOT (MSBUILD OR NINJA_WITH_VS))
       message(FATAL_ERROR
         "Sorry but building static connector on Windows using MSVC toolset"
         " works only with msbuild at the moment."
diff --git a/cmake/libutils/merge_archives.cmake.in b/cmake/libutils/merge_archives.cmake.in
index 1b25f03c..be0afe14 100644
--- a/cmake/libutils/merge_archives.cmake.in
+++ b/cmake/libutils/merge_archives.cmake.in
@@ -70,7 +70,7 @@ endif()
 
 # Nothing nees to be done if merging into DLL on Windows
 
-if(MSBUILD AND TYPE STREQUAL "SHARED")
+if((MSBUILD OR NINJA_WITH_VS) AND TYPE STREQUAL "SHARED")
   return()
 endif()
 
@@ -159,7 +159,7 @@ function(main)
   # nmake on Windows.
   #
 
-  if(MSBUILD)
+  if(MSBUILD OR NINJA_WITH_VS)
     process_deps_msbuild()
   else()
     process_deps_gcc()
@@ -184,7 +184,7 @@ function(main)
   endforeach()
   message("Merge options: ${LINK_OPTIONS}")
 
-  if(MSVC)
+  if(MSVC OR NINJA_WITH_VS)
     message("- using MSVC tools")
     merge_libraries_win()
   elseif(APPLE)
diff --git a/cmake/libutils/save_linker_opts.cc.orig b/cmake/libutils/save_linker_opts.cc.orig
new file mode 100644
index 00000000..3e253c8a
--- /dev/null
+++ b/cmake/libutils/save_linker_opts.cc.orig
@@ -0,0 +1,76 @@
+/*
+ * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License, version 2.0, as
+ * published by the Free Software Foundation.
+ *
+ * This program is also distributed with certain software (including
+ * but not limited to OpenSSL) that is licensed under separate terms,
+ * as designated in a particular file or component or in included license
+ * documentation.  The authors of MySQL hereby grant you an
+ * additional permission to link the program and your derivative works
+ * with the separately licensed software that they have included with
+ * MySQL.
+ *
+ * Without limiting anything contained in the foregoing, this file,
+ * which is part of MySQL Connector/C++, is also subject to the
+ * Universal FOSS Exception, version 1.0, a copy of which can be found at
+ * http://oss.oracle.com/licenses/universal-foss-exception.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ * See the GNU General Public License, version 2.0, for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
+ */
+
+#include <iostream>
+#include <fstream>
+
+#ifdef WIN32
+#include <direct.h>
+#define GETCWD _getcwd
+#else
+#include <unistd.h>
+#define GETCWD getcwd
+#endif
+
+using namespace std;
+
+int main(int argc, char* argv[])
+{
+  char pwd[1024];
+
+  if (!GETCWD(pwd, sizeof(pwd)))
+    return 1;
+
+  //cout << "Got " << argc << " arguments" << endl;
+  //cout << "Output file: " << argv[1] << endl;
+  //cout << "pwd: " << pwd << endl;
+
+  ofstream out(argv[1]);
+
+  // Note: first line in the output is the working directory
+
+  out << pwd << endl;
+
+  // Note: argv[2] is the compiler/linker command
+
+  for(int pos=3; pos < argc; pos++)
+  {
+    if(string(argv[pos]) == "-o")
+    {
+      pos ++;
+      continue;
+    }
+
+    //cout << "-- opt: " << argv[pos] << endl;
+    out << argv[pos] <<endl;
+  }
+  out.flush();
+  return 0;
+}
diff --git a/cmake/libutils/save_linker_opts.cc.rej b/cmake/libutils/save_linker_opts.cc.rej
new file mode 100644
index 00000000..d6978b48
--- /dev/null
+++ b/cmake/libutils/save_linker_opts.cc.rej
@@ -0,0 +1,24 @@
+***************
+*** 30,36 ****
+  
+  #include <iostream>
+  #include <fstream>
+- #include <unistd.h>
+  
+  using namespace std;
+  
+--- 30,43 ----
+  
+  #include <iostream>
+  #include <fstream>
++ 
++ #ifdef _WIN32
++     #include <direct.h>
++     #define getcwd _getcwd // suppress "deprecation" warning
++ #else
++     #include <unistd.h>
++ #endif
++ 
+  
+  using namespace std;
+  
-- 
2.38.0

